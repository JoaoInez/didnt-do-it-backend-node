# import Todo from "todo.graphql"

type User {
  id: ID!
  username: String!
  email: String!
  todos: [Todo]!
}

enum SignUpErrors {
  USERNAME_IN_USE
  EMAIL_IN_USE
  DB_ERROR
}

enum LogInErrors {
  BAD_CREDENTIALS
}

enum SignOutMessages {
  SIGNED_OUT
}

type SignUpMessage {
  message: SignUpErrors!
}

type LogInMessage {
  message: LogInErrors!
}

"Returns either an user or an error message"
union SignUpResult = User | SignUpMessage

"Returns either an user or an error message"
union LogInResult = User | LogInMessage

type SignOutResult {
  message: SignOutMessages!
}

input UserInput {
  id: ID!
}

input SignUpInput {
  username: String!
  email: String!
  password: String!
}

input LogInInput {
  email: String!
  password: String!
}

type Query {
  "Gets current user"
  currentUser: User
}

type Mutation {
  "Creates a new user"
  signUp(data: SignUpInput!): SignUpResult!
  "Logs in a user"
  logIn(data: LogInInput!): LogInResult!
  "Signs out a user"
  signOut: SignOutResult!
}
